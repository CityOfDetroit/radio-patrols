{"id":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","dependencies":[{"name":"C:\\REPOS\\radio-patrols\\package.json","includedInParent":true,"mtime":1538147351550},{"name":"C:\\REPOS\\radio-patrols\\node_modules\\@mapbox\\mapbox-gl-geocoder\\package.json","includedInParent":true,"mtime":1538147405323},{"name":"suggestions","loc":{"line":3,"column":24},"parent":"C:\\REPOS\\radio-patrols\\node_modules\\@mapbox\\mapbox-gl-geocoder\\lib\\index.js","resolved":"C:\\REPOS\\radio-patrols\\node_modules\\suggestions\\index.js"},{"name":"lodash.debounce","loc":{"line":4,"column":23},"parent":"C:\\REPOS\\radio-patrols\\node_modules\\@mapbox\\mapbox-gl-geocoder\\lib\\index.js","resolved":"C:\\REPOS\\radio-patrols\\node_modules\\lodash.debounce\\index.js"},{"name":"xtend","loc":{"line":5,"column":21},"parent":"C:\\REPOS\\radio-patrols\\node_modules\\@mapbox\\mapbox-gl-geocoder\\lib\\index.js","resolved":"C:\\REPOS\\radio-patrols\\node_modules\\xtend\\immutable.js"},{"name":"events","loc":{"line":6,"column":27},"parent":"C:\\REPOS\\radio-patrols\\node_modules\\@mapbox\\mapbox-gl-geocoder\\lib\\index.js","resolved":"C:\\Users\\montesje\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\events\\events.js"},{"name":"./exceptions","loc":{"line":7,"column":25},"parent":"C:\\REPOS\\radio-patrols\\node_modules\\@mapbox\\mapbox-gl-geocoder\\lib\\index.js","resolved":"C:\\REPOS\\radio-patrols\\node_modules\\@mapbox\\mapbox-gl-geocoder\\lib\\exceptions.js"},{"name":"mapbox/lib/services/geocoding","loc":{"line":8,"column":27},"parent":"C:\\REPOS\\radio-patrols\\node_modules\\@mapbox\\mapbox-gl-geocoder\\lib\\index.js","resolved":"C:\\REPOS\\radio-patrols\\node_modules\\@mapbox\\mapbox-gl-geocoder\\node_modules\\mapbox\\lib\\services\\geocoding.js"}],"generated":{"js":"'use strict';\n\nvar Typeahead = require('suggestions');\nvar debounce = require('lodash.debounce');\nvar extend = require('xtend');\nvar EventEmitter = require('events').EventEmitter;\nvar exceptions = require('./exceptions');\nvar MapboxClient = require('mapbox/lib/services/geocoding');\n\n/**\n * A geocoder component using Mapbox Geocoding API\n * @class MapboxGeocoder\n *\n * @param {Object} options\n * @param {String} options.accessToken Required.\n * @param {Number} [options.zoom=16] On geocoded result what zoom level should the map animate to when a `bbox` isn't found in the response. If a `bbox` is found the map will fit to the `bbox`.\n * @param {Boolean} [options.flyTo=true] If false, animating the map to a selected result is disabled.\n * @param {String} [options.placeholder=\"Search\"] Override the default placeholder attribute value.\n * @param {Object} [options.proximity] a proximity argument: this is\n * a geographical point given as an object with latitude and longitude\n * properties. Search results closer to this point will be given\n * higher priority.\n * @param {Boolean} [options.trackProximity=false] If true, the geocoder proximity will automatically update based on the map view.\n * @param {Array} [options.bbox] a bounding box argument: this is\n * a bounding box given as an array in the format [minX, minY, maxX, maxY].\n * Search results will be limited to the bounding box.\n * @param {string} [options.types] a comma seperated list of types that filter\n * results to match those specified. See https://www.mapbox.com/developers/api/geocoding/#filter-type\n * for available types.\n * @param {string} [options.country] a comma separated list of country codes to\n * limit results to specified country or countries.\n * @param {Number} [options.minLength=2] Minimum number of characters to enter before results are shown.\n * @param {Number} [options.limit=5] Maximum number of results to show.\n * @param {string} [options.language] Specify the language to use for response text and query result weighting. Options are IETF language tags comprised of a mandatory ISO 639-1 language code and optionally one or more IETF subtags for country or script. More than one value can also be specified, separated by commas.\n * @param {Function} [options.filter] A function which accepts a Feature in the [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) format to filter out results from the Geocoding API response before they are included in the suggestions list. Return `true` to keep the item, `false` otherwise.\n * @param {Function} [options.localGeocoder] A function accepting the query string which performs local geocoding to supplement results from the Mapbox Geocoding API. Expected to return an Array of GeoJSON Features in the [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) format.\n * @example\n * var geocoder = new MapboxGeocoder({ accessToken: mapboxgl.accessToken });\n * map.addControl(geocoder);\n * @return {MapboxGeocoder} `this`\n */\nfunction MapboxGeocoder(options) {\n  this._eventEmitter = new EventEmitter();\n  this.options = extend({}, this.options, options);\n}\n\nMapboxGeocoder.prototype = {\n\n  options: {\n    placeholder: 'Search',\n    zoom: 16,\n    flyTo: true,\n    trackProximity: false,\n    minLength: 2,\n    limit: 5\n  },\n\n  onAdd: function(map) {\n    this._map = map;\n    this.mapboxClient = new MapboxClient(this.options.accessToken);\n    this._onChange = this._onChange.bind(this);\n    this._onKeyDown = this._onKeyDown.bind(this);\n    this._onQueryResult = this._onQueryResult.bind(this);\n    this._clear = this._clear.bind(this);\n    this._updateProximity = this._updateProximity.bind(this);\n\n    var el = this.container = document.createElement('div');\n    el.className = 'mapboxgl-ctrl-geocoder mapboxgl-ctrl';\n\n    var icon = document.createElement('span');\n    icon.className = 'geocoder-icon geocoder-icon-search';\n\n    this._inputEl = document.createElement('input');\n    this._inputEl.type = 'text';\n    this._inputEl.placeholder = this.options.placeholder;\n\n    this._inputEl.addEventListener('keydown', this._onKeyDown);\n    this._inputEl.addEventListener('change', this._onChange);\n\n    var actions = document.createElement('div');\n    actions.classList.add('geocoder-pin-right');\n\n    this._clearEl = document.createElement('button');\n    this._clearEl.className = 'geocoder-icon geocoder-icon-close';\n    this._clearEl.setAttribute('aria-label', 'Clear');\n    this._clearEl.addEventListener('click', this._clear);\n\n    this._loadingEl = document.createElement('span');\n    this._loadingEl.className = 'geocoder-icon geocoder-icon-loading';\n\n    actions.appendChild(this._clearEl);\n    actions.appendChild(this._loadingEl);\n\n    el.appendChild(icon);\n    el.appendChild(this._inputEl);\n    el.appendChild(actions);\n\n    this._typeahead = new Typeahead(this._inputEl, [], {\n      filter: false,\n      minLength: this.options.minLength,\n      limit: this.options.limit\n    });\n    this._typeahead.getItemValue = function(item) { return item.place_name; };\n\n    if (this.options.trackProximity) {\n      this._updateProximity();\n      this._map.on('moveend', this._updateProximity);\n    }\n\n    return el;\n  },\n\n  onRemove: function() {\n    this.container.parentNode.removeChild(this.container);\n    this._map = null;\n\n    if (this.options.trackProximity) {\n      this._map.off('moveend', this._updateProximity);\n    }\n\n    return this;\n  },\n\n  _onKeyDown: debounce(function(e) {\n    // if target has shadowRoot, then get the actual active element inside the shadowRoot\n    var target = e.target.shadowRoot ? e.target.shadowRoot.activeElement : e.target;\n    if (!target.value) {\n      return this._clearEl.style.display = 'none';\n    }\n\n    // TAB, ESC, LEFT, RIGHT, ENTER, UP, DOWN\n    if (e.metaKey || [9, 27, 37, 39, 13, 38, 40].indexOf(e.keyCode) !== -1) return;\n\n    if (target.value.length >= this.options.minLength) {\n      this._geocode(target.value);\n    }\n  }, 200),\n\n  _onChange: function() {\n    if (this._inputEl.value) this._clearEl.style.display = 'block';\n    var selected = this._typeahead.selected;\n    if (selected) {\n      if (this.options.flyTo) {\n        if (!exceptions[selected.id] && selected.bbox) {\n          var bbox = selected.bbox;\n          this._map.fitBounds([[bbox[0], bbox[1]],[bbox[2], bbox[3]]]);\n        } else if (exceptions[selected.id]) {\n          // Certain geocoder search results return (and therefore zoom to fit)\n          // an unexpectedly large bounding box: for example, both Russia and the\n          // USA span both sides of -180/180, or France includes the island of\n          // Reunion in the Indian Ocean. An incomplete list of these exceptions\n          // at ./exceptions.json provides \"reasonable\" bounding boxes as a\n          // short-term solution; this may be amended as necessary.\n          this._map.fitBounds(exceptions[selected.id].bbox);\n        } else {\n          this._map.flyTo({\n            center: selected.center,\n            zoom: this.options.zoom\n          });\n        }\n      }\n      this._eventEmitter.emit('result', { result: selected });\n    }\n  },\n\n  _geocode: function(searchInput) {\n    this._loadingEl.style.display = 'block';\n    this._eventEmitter.emit('loading', { query: searchInput });\n    var request = this.mapboxClient.geocodeForward(searchInput, this.options);\n\n    var localGeocoderRes = [];\n    if (this.options.localGeocoder) {\n      localGeocoderRes = this.options.localGeocoder(searchInput);\n      if (!localGeocoderRes) {\n        localGeocoderRes = [];\n      }\n    }\n\n    request.then(function (response) {\n      this._loadingEl.style.display = 'none';\n\n      var res = {};\n\n      if (response.status == '200') {\n        res = response.entity;\n      }\n\n      // supplement Mapbox Geocoding API results with locally populated results\n      res.features = res.features ? localGeocoderRes.concat(res.features) : localGeocoderRes;\n\n      // apply results filter if provided\n      if (this.options.filter && res.features.length) {\n        res.features = res.features.filter(this.options.filter);\n      }\n\n      if (res.features.length) {\n        this._clearEl.style.display = 'block';\n      } else {\n        this._clearEl.style.display = 'none';\n        this._typeahead.selected = null;\n      }\n\n      this._eventEmitter.emit('results', res);\n      this._typeahead.update(res.features);\n    }.bind(this));\n\n    request.catch(function (err) {\n      this._loadingEl.style.display = 'none';\n\n      // in the event of an error in the Mapbox Geocoding API still display results from the localGeocoder\n      if (localGeocoderRes.length) {\n        this._clearEl.style.display = 'block';\n      } else {\n        this._clearEl.style.display = 'none';\n        this._typeahead.selected = null;\n      }\n\n      this._eventEmitter.emit('results', { features: localGeocoderRes });\n      this._typeahead.update(localGeocoderRes);\n\n      this._eventEmitter.emit('error', { error: err });\n    }.bind(this));\n\n    return request;\n  },\n\n  _clear: function(ev) {\n    if (ev) ev.preventDefault();\n    this._inputEl.value = '';\n    this._typeahead.selected = null;\n    this._typeahead.clear();\n    this._onChange();\n    this._inputEl.focus();\n    this._clearEl.style.display = 'none';\n    this._eventEmitter.emit('clear');\n  },\n\n  _onQueryResult: function(response) {\n    var results = response.entity;\n    if (!results.features.length) return;\n    var result = results.features[0];\n    this._typeahead.selected = result;\n    this._inputEl.value = result.place_name;\n    this._onChange();\n  },\n\n  _updateProximity: function() {\n    // proximity is designed for local scale, if the user is looking at the whole world,\n    // it doesn't make sense to factor in the arbitrary centre of the map\n    if (this._map.getZoom() > 9) {\n      var center = this._map.getCenter().wrap();\n      this.setProximity({ longitude: center.lng, latitude: center.lat });\n    } else {\n      this.setProximity(null);\n    }\n  },\n\n  /**\n   * Set & query the input\n   * @param {string} searchInput location name or other search input\n   * @returns {MapboxGeocoder} this\n   */\n  query: function(searchInput) {\n    this._geocode(searchInput).then(this._onQueryResult);\n    return this;\n  },\n\n  /**\n   * Set input\n   * @param {string} searchInput location name or other search input\n   * @returns {MapboxGeocoder} this\n   */\n  setInput: function(searchInput) {\n    // Set input value to passed value and clear everything else.\n    this._inputEl.value = searchInput;\n    this._typeahead.selected = null;\n    this._typeahead.clear();\n    this._onChange();\n    return this;\n  },\n\n  /**\n   * Set proximity\n   * @param {Object} proximity The new options.proximity value. This is a geographical point given as an object with latitude and longitude properties.\n   * @returns {MapboxGeocoder} this\n   */\n  setProximity: function(proximity) {\n    this.options.proximity = proximity;\n    return this;\n  },\n\n  /**\n   * Get proximity\n   * @returns {Object} The geocoder proximity\n   */\n  getProximity: function() {\n    return this.options.proximity;\n  },\n\n  /**\n   * Subscribe to events that happen within the plugin.\n   * @param {String} type name of event. Available events and the data passed into their respective event objects are:\n   *\n   * - __clear__ `Emitted when the input is cleared`\n   * - __loading__ `{ query } Emitted when the geocoder is looking up a query`\n   * - __results__ `{ results } Fired when the geocoder returns a response`\n   * - __result__ `{ result } Fired when input is set`\n   * - __error__ `{ error } Error as string`\n   * @param {Function} fn function that's called when the event is emitted.\n   * @returns {MapboxGeocoder} this;\n   */\n  on: function(type, fn) {\n    this._eventEmitter.on(type, fn);\n    return this;\n  },\n\n  /**\n   * Remove an event\n   * @returns {MapboxGeocoder} this\n   * @param {String} type Event name.\n   * @param {Function} fn Function that should unsubscribe to the event emitted.\n   */\n  off: function(type, fn) {\n    this._eventEmitter.removeListener(type, fn);\n    return this;\n  }\n};\n\nmodule.exports = MapboxGeocoder;\n","map":{"mappings":[{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}}],"sources":{"node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js":"'use strict';\n\nvar Typeahead = require('suggestions');\nvar debounce = require('lodash.debounce');\nvar extend = require('xtend');\nvar EventEmitter = require('events').EventEmitter;\nvar exceptions = require('./exceptions');\nvar MapboxClient = require('mapbox/lib/services/geocoding');\n\n/**\n * A geocoder component using Mapbox Geocoding API\n * @class MapboxGeocoder\n *\n * @param {Object} options\n * @param {String} options.accessToken Required.\n * @param {Number} [options.zoom=16] On geocoded result what zoom level should the map animate to when a `bbox` isn't found in the response. If a `bbox` is found the map will fit to the `bbox`.\n * @param {Boolean} [options.flyTo=true] If false, animating the map to a selected result is disabled.\n * @param {String} [options.placeholder=\"Search\"] Override the default placeholder attribute value.\n * @param {Object} [options.proximity] a proximity argument: this is\n * a geographical point given as an object with latitude and longitude\n * properties. Search results closer to this point will be given\n * higher priority.\n * @param {Boolean} [options.trackProximity=false] If true, the geocoder proximity will automatically update based on the map view.\n * @param {Array} [options.bbox] a bounding box argument: this is\n * a bounding box given as an array in the format [minX, minY, maxX, maxY].\n * Search results will be limited to the bounding box.\n * @param {string} [options.types] a comma seperated list of types that filter\n * results to match those specified. See https://www.mapbox.com/developers/api/geocoding/#filter-type\n * for available types.\n * @param {string} [options.country] a comma separated list of country codes to\n * limit results to specified country or countries.\n * @param {Number} [options.minLength=2] Minimum number of characters to enter before results are shown.\n * @param {Number} [options.limit=5] Maximum number of results to show.\n * @param {string} [options.language] Specify the language to use for response text and query result weighting. Options are IETF language tags comprised of a mandatory ISO 639-1 language code and optionally one or more IETF subtags for country or script. More than one value can also be specified, separated by commas.\n * @param {Function} [options.filter] A function which accepts a Feature in the [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) format to filter out results from the Geocoding API response before they are included in the suggestions list. Return `true` to keep the item, `false` otherwise.\n * @param {Function} [options.localGeocoder] A function accepting the query string which performs local geocoding to supplement results from the Mapbox Geocoding API. Expected to return an Array of GeoJSON Features in the [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) format.\n * @example\n * var geocoder = new MapboxGeocoder({ accessToken: mapboxgl.accessToken });\n * map.addControl(geocoder);\n * @return {MapboxGeocoder} `this`\n */\nfunction MapboxGeocoder(options) {\n  this._eventEmitter = new EventEmitter();\n  this.options = extend({}, this.options, options);\n}\n\nMapboxGeocoder.prototype = {\n\n  options: {\n    placeholder: 'Search',\n    zoom: 16,\n    flyTo: true,\n    trackProximity: false,\n    minLength: 2,\n    limit: 5\n  },\n\n  onAdd: function(map) {\n    this._map = map;\n    this.mapboxClient = new MapboxClient(this.options.accessToken);\n    this._onChange = this._onChange.bind(this);\n    this._onKeyDown = this._onKeyDown.bind(this);\n    this._onQueryResult = this._onQueryResult.bind(this);\n    this._clear = this._clear.bind(this);\n    this._updateProximity = this._updateProximity.bind(this);\n\n    var el = this.container = document.createElement('div');\n    el.className = 'mapboxgl-ctrl-geocoder mapboxgl-ctrl';\n\n    var icon = document.createElement('span');\n    icon.className = 'geocoder-icon geocoder-icon-search';\n\n    this._inputEl = document.createElement('input');\n    this._inputEl.type = 'text';\n    this._inputEl.placeholder = this.options.placeholder;\n\n    this._inputEl.addEventListener('keydown', this._onKeyDown);\n    this._inputEl.addEventListener('change', this._onChange);\n\n    var actions = document.createElement('div');\n    actions.classList.add('geocoder-pin-right');\n\n    this._clearEl = document.createElement('button');\n    this._clearEl.className = 'geocoder-icon geocoder-icon-close';\n    this._clearEl.setAttribute('aria-label', 'Clear');\n    this._clearEl.addEventListener('click', this._clear);\n\n    this._loadingEl = document.createElement('span');\n    this._loadingEl.className = 'geocoder-icon geocoder-icon-loading';\n\n    actions.appendChild(this._clearEl);\n    actions.appendChild(this._loadingEl);\n\n    el.appendChild(icon);\n    el.appendChild(this._inputEl);\n    el.appendChild(actions);\n\n    this._typeahead = new Typeahead(this._inputEl, [], {\n      filter: false,\n      minLength: this.options.minLength,\n      limit: this.options.limit\n    });\n    this._typeahead.getItemValue = function(item) { return item.place_name; };\n\n    if (this.options.trackProximity) {\n      this._updateProximity();\n      this._map.on('moveend', this._updateProximity);\n    }\n\n    return el;\n  },\n\n  onRemove: function() {\n    this.container.parentNode.removeChild(this.container);\n    this._map = null;\n\n    if (this.options.trackProximity) {\n      this._map.off('moveend', this._updateProximity);\n    }\n\n    return this;\n  },\n\n  _onKeyDown: debounce(function(e) {\n    // if target has shadowRoot, then get the actual active element inside the shadowRoot\n    var target = e.target.shadowRoot ? e.target.shadowRoot.activeElement : e.target;\n    if (!target.value) {\n      return this._clearEl.style.display = 'none';\n    }\n\n    // TAB, ESC, LEFT, RIGHT, ENTER, UP, DOWN\n    if (e.metaKey || [9, 27, 37, 39, 13, 38, 40].indexOf(e.keyCode) !== -1) return;\n\n    if (target.value.length >= this.options.minLength) {\n      this._geocode(target.value);\n    }\n  }, 200),\n\n  _onChange: function() {\n    if (this._inputEl.value) this._clearEl.style.display = 'block';\n    var selected = this._typeahead.selected;\n    if (selected) {\n      if (this.options.flyTo) {\n        if (!exceptions[selected.id] && selected.bbox) {\n          var bbox = selected.bbox;\n          this._map.fitBounds([[bbox[0], bbox[1]],[bbox[2], bbox[3]]]);\n        } else if (exceptions[selected.id]) {\n          // Certain geocoder search results return (and therefore zoom to fit)\n          // an unexpectedly large bounding box: for example, both Russia and the\n          // USA span both sides of -180/180, or France includes the island of\n          // Reunion in the Indian Ocean. An incomplete list of these exceptions\n          // at ./exceptions.json provides \"reasonable\" bounding boxes as a\n          // short-term solution; this may be amended as necessary.\n          this._map.fitBounds(exceptions[selected.id].bbox);\n        } else {\n          this._map.flyTo({\n            center: selected.center,\n            zoom: this.options.zoom\n          });\n        }\n      }\n      this._eventEmitter.emit('result', { result: selected });\n    }\n  },\n\n  _geocode: function(searchInput) {\n    this._loadingEl.style.display = 'block';\n    this._eventEmitter.emit('loading', { query: searchInput });\n    var request = this.mapboxClient.geocodeForward(searchInput, this.options);\n\n    var localGeocoderRes = [];\n    if (this.options.localGeocoder) {\n      localGeocoderRes = this.options.localGeocoder(searchInput);\n      if (!localGeocoderRes) {\n        localGeocoderRes = [];\n      }\n    }\n\n    request.then(function (response) {\n      this._loadingEl.style.display = 'none';\n\n      var res = {};\n\n      if (response.status == '200') {\n        res = response.entity;\n      }\n\n      // supplement Mapbox Geocoding API results with locally populated results\n      res.features = res.features ? localGeocoderRes.concat(res.features) : localGeocoderRes;\n\n      // apply results filter if provided\n      if (this.options.filter && res.features.length) {\n        res.features = res.features.filter(this.options.filter);\n      }\n\n      if (res.features.length) {\n        this._clearEl.style.display = 'block';\n      } else {\n        this._clearEl.style.display = 'none';\n        this._typeahead.selected = null;\n      }\n\n      this._eventEmitter.emit('results', res);\n      this._typeahead.update(res.features);\n    }.bind(this));\n\n    request.catch(function (err) {\n      this._loadingEl.style.display = 'none';\n\n      // in the event of an error in the Mapbox Geocoding API still display results from the localGeocoder\n      if (localGeocoderRes.length) {\n        this._clearEl.style.display = 'block';\n      } else {\n        this._clearEl.style.display = 'none';\n        this._typeahead.selected = null;\n      }\n\n      this._eventEmitter.emit('results', { features: localGeocoderRes });\n      this._typeahead.update(localGeocoderRes);\n\n      this._eventEmitter.emit('error', { error: err });\n    }.bind(this));\n\n    return request;\n  },\n\n  _clear: function(ev) {\n    if (ev) ev.preventDefault();\n    this._inputEl.value = '';\n    this._typeahead.selected = null;\n    this._typeahead.clear();\n    this._onChange();\n    this._inputEl.focus();\n    this._clearEl.style.display = 'none';\n    this._eventEmitter.emit('clear');\n  },\n\n  _onQueryResult: function(response) {\n    var results = response.entity;\n    if (!results.features.length) return;\n    var result = results.features[0];\n    this._typeahead.selected = result;\n    this._inputEl.value = result.place_name;\n    this._onChange();\n  },\n\n  _updateProximity: function() {\n    // proximity is designed for local scale, if the user is looking at the whole world,\n    // it doesn't make sense to factor in the arbitrary centre of the map\n    if (this._map.getZoom() > 9) {\n      var center = this._map.getCenter().wrap();\n      this.setProximity({ longitude: center.lng, latitude: center.lat });\n    } else {\n      this.setProximity(null);\n    }\n  },\n\n  /**\n   * Set & query the input\n   * @param {string} searchInput location name or other search input\n   * @returns {MapboxGeocoder} this\n   */\n  query: function(searchInput) {\n    this._geocode(searchInput).then(this._onQueryResult);\n    return this;\n  },\n\n  /**\n   * Set input\n   * @param {string} searchInput location name or other search input\n   * @returns {MapboxGeocoder} this\n   */\n  setInput: function(searchInput) {\n    // Set input value to passed value and clear everything else.\n    this._inputEl.value = searchInput;\n    this._typeahead.selected = null;\n    this._typeahead.clear();\n    this._onChange();\n    return this;\n  },\n\n  /**\n   * Set proximity\n   * @param {Object} proximity The new options.proximity value. This is a geographical point given as an object with latitude and longitude properties.\n   * @returns {MapboxGeocoder} this\n   */\n  setProximity: function(proximity) {\n    this.options.proximity = proximity;\n    return this;\n  },\n\n  /**\n   * Get proximity\n   * @returns {Object} The geocoder proximity\n   */\n  getProximity: function() {\n    return this.options.proximity;\n  },\n\n  /**\n   * Subscribe to events that happen within the plugin.\n   * @param {String} type name of event. Available events and the data passed into their respective event objects are:\n   *\n   * - __clear__ `Emitted when the input is cleared`\n   * - __loading__ `{ query } Emitted when the geocoder is looking up a query`\n   * - __results__ `{ results } Fired when the geocoder returns a response`\n   * - __result__ `{ result } Fired when input is set`\n   * - __error__ `{ error } Error as string`\n   * @param {Function} fn function that's called when the event is emitted.\n   * @returns {MapboxGeocoder} this;\n   */\n  on: function(type, fn) {\n    this._eventEmitter.on(type, fn);\n    return this;\n  },\n\n  /**\n   * Remove an event\n   * @returns {MapboxGeocoder} this\n   * @param {String} type Event name.\n   * @param {Function} fn Function that should unsubscribe to the event emitted.\n   */\n  off: function(type, fn) {\n    this._eventEmitter.removeListener(type, fn);\n    return this;\n  }\n};\n\nmodule.exports = MapboxGeocoder;\n"},"lineCount":330}},"hash":"c04824003da8884869e8cf09ae0bd3f9","cacheData":{"env":{}}}