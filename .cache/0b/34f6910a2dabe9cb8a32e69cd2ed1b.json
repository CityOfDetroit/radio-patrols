{"id":"IRlL","dependencies":[{"name":"/Users/edgar/Documents/repos/radio-patrols/package.json","includedInParent":true,"mtime":1626815941230},{"name":"/Users/edgar/Documents/repos/radio-patrols/.babelrc","includedInParent":true,"mtime":1626804232184},{"name":"/Users/edgar/Documents/repos/radio-patrols/node_modules/rest/package.json","includedInParent":true,"mtime":1626804455906},{"name":"./attempt","loc":{"line":10,"column":22},"parent":"/Users/edgar/Documents/repos/radio-patrols/node_modules/rest/util/lazyPromise.js","resolved":"/Users/edgar/Documents/repos/radio-patrols/node_modules/rest/util/attempt.js"}],"generated":{"js":"\"use strict\";var e=require(\"./attempt\");function t(t){var r,n,o,u;return r=!1,o=new Promise(function(e,t){n={resolve:e,reject:t}}),u=o.then,o.then=function(){return r||(r=!0,e(t).then(n.resolve,n.reject)),u.apply(o,arguments)},o}module.exports=t;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":8,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":10,"column":0},"generated":{"line":1,"column":13}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":10,"column":0},"generated":{"line":1,"column":17}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":10,"column":0},"generated":{"line":1,"column":19}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":10,"column":0},"generated":{"line":1,"column":27}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":22,"column":0},"generated":{"line":1,"column":40}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":22,"column":0},"generated":{"line":1,"column":49}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":22,"column":0},"generated":{"line":1,"column":51}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":23,"column":0},"generated":{"line":1,"column":54}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":23,"column":0},"generated":{"line":1,"column":58}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":23,"column":0},"generated":{"line":1,"column":60}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":23,"column":0},"generated":{"line":1,"column":62}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":23,"column":0},"generated":{"line":1,"column":64}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":43,"column":0},"generated":{"line":1,"column":66}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":25,"column":0},"generated":{"line":1,"column":73}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":25,"column":0},"generated":{"line":1,"column":76}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":27,"column":0},"generated":{"line":1,"column":78}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":27,"column":0},"generated":{"line":1,"column":80}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":27,"column":0},"generated":{"line":1,"column":84}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":27,"column":0},"generated":{"line":1,"column":92}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":27,"column":0},"generated":{"line":1,"column":101}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":27,"column":0},"generated":{"line":1,"column":103}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":28,"column":0},"generated":{"line":1,"column":106}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":28,"column":0},"generated":{"line":1,"column":108}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":29,"column":0},"generated":{"line":1,"column":109}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":29,"column":0},"generated":{"line":1,"column":117}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":30,"column":0},"generated":{"line":1,"column":119}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":30,"column":0},"generated":{"line":1,"column":126}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":33,"column":0},"generated":{"line":1,"column":131}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":33,"column":0},"generated":{"line":1,"column":133}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":33,"column":0},"generated":{"line":1,"column":135}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":35,"column":0},"generated":{"line":1,"column":140}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":35,"column":0},"generated":{"line":1,"column":142}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":35,"column":0},"generated":{"line":1,"column":147}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":40,"column":0},"generated":{"line":1,"column":158}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":36,"column":0},"generated":{"line":1,"column":165}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":37,"column":0},"generated":{"line":1,"column":169}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":37,"column":0},"generated":{"line":1,"column":172}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":38,"column":0},"generated":{"line":1,"column":174}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":38,"column":0},"generated":{"line":1,"column":176}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":38,"column":0},"generated":{"line":1,"column":179}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":38,"column":0},"generated":{"line":1,"column":184}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":38,"column":0},"generated":{"line":1,"column":186}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":38,"column":0},"generated":{"line":1,"column":194}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":38,"column":0},"generated":{"line":1,"column":196}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":40,"column":0},"generated":{"line":1,"column":205}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":40,"column":0},"generated":{"line":1,"column":207}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":40,"column":0},"generated":{"line":1,"column":213}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":40,"column":0},"generated":{"line":1,"column":215}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":43,"column":0},"generated":{"line":1,"column":227}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":46,"column":0},"generated":{"line":1,"column":229}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":46,"column":0},"generated":{"line":1,"column":236}},{"source":"node_modules/rest/util/lazyPromise.js","original":{"line":46,"column":0},"generated":{"line":1,"column":244}}],"sources":{"node_modules/rest/util/lazyPromise.js":"/*\n * Copyright 2013-2016 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n\n'use strict';\n\nvar attempt = require('./attempt');\n\n/**\n * Create a promise whose work is started only when a handler is registered.\n *\n * The work function will be invoked at most once. Thrown values will result\n * in promise rejection.\n *\n * @param {Function} work function whose ouput is used to resolve the\n *   returned promise.\n * @returns {Promise} a lazy promise\n */\nfunction lazyPromise(work) {\n\tvar started, resolver, promise, then;\n\n\tstarted = false;\n\n\tpromise = new Promise(function (resolve, reject) {\n\t\tresolver = {\n\t\t\tresolve: resolve,\n\t\t\treject: reject\n\t\t};\n\t});\n\tthen = promise.then;\n\n\tpromise.then = function () {\n\t\tif (!started) {\n\t\t\tstarted = true;\n\t\t\tattempt(work).then(resolver.resolve, resolver.reject);\n\t\t}\n\t\treturn then.apply(promise, arguments);\n\t};\n\n\treturn promise;\n}\n\nmodule.exports = lazyPromise;\n"},"lineCount":null}},"error":null,"hash":"1d8fcbd853aa89fb5f43fc853a1c9e8c","cacheData":{"env":{}}}