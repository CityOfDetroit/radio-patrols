{"id":"veOB","dependencies":[{"name":"/Users/edgar/Documents/repos/radio-patrols/package.json","includedInParent":true,"mtime":1626815941230},{"name":"/Users/edgar/Documents/repos/radio-patrols/.babelrc","includedInParent":true,"mtime":1626804232184},{"name":"/Users/edgar/Documents/repos/radio-patrols/node_modules/rest/package.json","includedInParent":true,"mtime":1626804455906}],"generated":{"js":"\"use strict\";function e(e){try{return Promise.resolve(e())}catch(r){return Promise.reject(r)}}module.exports=e;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/rest/util/attempt.js","original":{"line":8,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/rest/util/attempt.js","original":{"line":18,"column":0},"generated":{"line":1,"column":13}},{"source":"node_modules/rest/util/attempt.js","original":{"line":18,"column":0},"generated":{"line":1,"column":22}},{"source":"node_modules/rest/util/attempt.js","original":{"line":18,"column":0},"generated":{"line":1,"column":24}},{"source":"node_modules/rest/util/attempt.js","original":{"line":19,"column":0},"generated":{"line":1,"column":27}},{"source":"node_modules/rest/util/attempt.js","original":{"line":20,"column":0},"generated":{"line":1,"column":31}},{"source":"node_modules/rest/util/attempt.js","original":{"line":20,"column":0},"generated":{"line":1,"column":38}},{"source":"node_modules/rest/util/attempt.js","original":{"line":20,"column":0},"generated":{"line":1,"column":46}},{"source":"node_modules/rest/util/attempt.js","original":{"line":20,"column":0},"generated":{"line":1,"column":54}},{"source":"node_modules/rest/util/attempt.js","original":{"line":22,"column":0},"generated":{"line":1,"column":59}},{"source":"node_modules/rest/util/attempt.js","original":{"line":22,"column":0},"generated":{"line":1,"column":65}},{"source":"node_modules/rest/util/attempt.js","original":{"line":23,"column":0},"generated":{"line":1,"column":68}},{"source":"node_modules/rest/util/attempt.js","original":{"line":23,"column":0},"generated":{"line":1,"column":75}},{"source":"node_modules/rest/util/attempt.js","original":{"line":23,"column":0},"generated":{"line":1,"column":83}},{"source":"node_modules/rest/util/attempt.js","original":{"line":23,"column":0},"generated":{"line":1,"column":90}},{"source":"node_modules/rest/util/attempt.js","original":{"line":27,"column":0},"generated":{"line":1,"column":94}},{"source":"node_modules/rest/util/attempt.js","original":{"line":27,"column":0},"generated":{"line":1,"column":101}},{"source":"node_modules/rest/util/attempt.js","original":{"line":27,"column":0},"generated":{"line":1,"column":109}}],"sources":{"node_modules/rest/util/attempt.js":"/*\n * Copyright 2015-2016 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n\n'use strict';\n\n/**\n * Attempt to invoke a function capturing the resulting value as a Promise\n *\n * If the method throws, the caught value used to reject the Promise.\n *\n * @param {function} work function to invoke\n * @returns {Promise} Promise for the output of the work function\n */\nfunction attempt(work) {\n\ttry {\n\t\treturn Promise.resolve(work());\n\t}\n\tcatch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\nmodule.exports = attempt;\n"},"lineCount":null}},"error":null,"hash":"a7167f807a0d660ce7fd800a6db6cf40","cacheData":{"env":{}}}